import { chromium } from 'playwright';

console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø IP –ò –î–û–°–¢–£–ü–ê –ö –°–ê–ô–¢–£\n');

const checkIPStatus = async () => {
  let browser = null;
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π IP
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π IP —á–µ—Ä–µ–∑ httpbin...');
    browser = await chromium.launch({ 
      headless: true,
      dumpio: true 
    });
    
    const page = await browser.newPage();
    
    await page.goto('https://httpbin.org/ip');
    const ipInfo = await page.textContent('pre') || await page.textContent('body');
    console.log(`   üìÑ Raw response: ${ipInfo}`);
    const currentIP = JSON.parse(ipInfo.trim()).origin;
    console.log(`   üìç –¢–µ–∫—É—â–∏–π IP: ${currentIP}`);
    
    await browser.close();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ vseinstrumenti.ru
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ vseinstrumenti.ru...');
    browser = await chromium.launch({ 
      headless: true,
      dumpio: true 
    });
    
    const testPage = await browser.newPage();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã
    testPage.on('response', response => {
      if (response.url().includes('vseinstrumenti.ru')) {
        console.log(`   üì• [${response.status()}] ${response.url()}`);
        
        if (response.status() === 403) {
          console.log(`   üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê! IP ${currentIP} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
        }
      }
    });
    
    await testPage.setExtraHTTPHeaders({
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36'
    });
    
    console.log('   üåê –ü–æ–ø—ã—Ç–∫–∞ 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞...');
    const homeResponse = await testPage.goto('https://www.vseinstrumenti.ru/', { 
      waitUntil: 'domcontentloaded',
      timeout: 30000
    });
    
    console.log(`   üìä –ì–ª–∞–≤–Ω–∞—è: ${homeResponse.status()}`);
    
    if (homeResponse.status() === 200) {
      console.log('   ‚úÖ IP –ù–ï –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - –º–æ–∂–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≥–æ—Ä–æ–¥–∞
      await new Promise(resolve => setTimeout(resolve, 2000));
      console.log('   üåê –ü–æ–ø—ã—Ç–∫–∞ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ—Ä–æ–¥–∞...');
      
      const cityResponse = await testPage.goto('https://www.vseinstrumenti.ru/represent/change/?represent_id=1', { 
        waitUntil: 'domcontentloaded',
        timeout: 30000
      });
      
      console.log(`   üìä –ì–æ—Ä–æ–¥: ${cityResponse.status()}`);
      
    } else if (homeResponse.status() === 403) {
      console.log('   ‚ùå IP –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù - –Ω—É–∂–µ–Ω –ø—Ä–æ–∫—Å–∏ —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏');
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      const content = await testPage.content();
      if (content.includes('blocked') || content.includes('forbidden')) {
        console.log('   üîí –¢–∏–ø: –ê–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç–∞');
      } else {
        console.log('   üîí –¢–∏–ø: –û–±—â–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ IP');
      }
    }
    
    await browser.close();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä (Firefox)
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Firefox –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...');
    const firefox = await import('playwright').then(pw => pw.firefox);
    const ffBrowser = await firefox.launch({ 
      headless: true,
      dumpio: true 
    });
    
    const ffPage = await ffBrowser.newPage();
    
    ffPage.on('response', response => {
      if (response.url().includes('vseinstrumenti.ru')) {
        console.log(`   ü¶ä [${response.status()}] ${response.url()}`);
      }
    });
    
    await ffPage.setExtraHTTPHeaders({
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0'
    });
    
    const ffResponse = await ffPage.goto('https://www.vseinstrumenti.ru/', { 
      waitUntil: 'domcontentloaded',
      timeout: 30000
    });
    
    console.log(`   ü¶ä Firefox —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${ffResponse.status()}`);
    
    if (ffResponse.status() !== homeResponse.status()) {
      console.log('   ‚ö†Ô∏è –†–ê–ó–ù–´–ï —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Chrome –∏ Firefox - –ø—Ä–æ–±–ª–µ–º–∞ –≤ fingerprint\'–µ –±—Ä–∞—É–∑–µ—Ä–∞!');
    } else {
      console.log('   ‚ÑπÔ∏è –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - –ø—Ä–æ–±–ª–µ–º–∞ –≤ IP –∏–ª–∏ –æ–±—â–µ–π –∑–∞—â–∏—Ç–µ');
    }
    
    await ffBrowser.close();
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}`);
    if (browser) {
      try { await browser.close(); } catch (e) {}
    }
  }
};

await checkIPStatus(); 