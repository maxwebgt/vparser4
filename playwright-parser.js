import { chromium } from 'playwright';
import { getProxyHandler, getCountryEmoji } from './modules/proxyHandler.js';
import { PROXY_CONFIG } from './modules/config.js';
import { log } from './modules/logger.js';

console.log('üõí –≠–§–§–ï–ö–¢–ò–í–ù–´–ô –ü–ê–†–°–ï–† –ù–ê–õ–ò–ß–ò–Ø: Playwright –≤–µ—Ä—Å–∏—è —Å –†–ê–ë–û–ß–ò–ú–ò –ü–†–û–ö–°–ò\n');

const parseProductAvailability = async () => {
  let browser = null;
  let currentProxy = null;
  let proxyHandler = null;
  let usedProxy = false;
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ —Ö–µ–Ω–¥–ª–µ—Ä
    log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ —Ö–µ–Ω–¥–ª–µ—Ä...', 'info');
    proxyHandler = await getProxyHandler();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–µ–Ω –ª–∏ –ø—Ä–æ–∫—Å–∏ —Å—Ä–∞–∑—É –∏–ª–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤—ã—Ö –æ—à–∏–±–æ–∫
    let shouldUseProxy = false;
    
    // –ü—Ä–æ–±—É–µ–º –±–µ–∑ –ø—Ä–æ–∫—Å–∏ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫
    const MAX_ATTEMPTS = 3;
    let success = false;
    
    for (let attempt = 1; attempt <= MAX_ATTEMPTS && !success; attempt++) {
      log(`üîÑ [ATTEMPT ${attempt}/${MAX_ATTEMPTS}] –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ø—ã—Ç–∫—É...`, 'info');
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –±—Ä–∞—É–∑–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
      if (browser) {
        await browser.close();
        browser = null;
      }
      
      // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ø—Ä–æ–∫—Å–∏, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π
      if (shouldUseProxy || (attempt > 2 && !success)) {
        log('üåê –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏...', 'proxy');
        currentProxy = await proxyHandler.getNextWorkingProxy();
        
        if (currentProxy) {
          usedProxy = true;
          log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏: ${getCountryEmoji(currentProxy.country)} ${currentProxy.host}:${currentProxy.port}`, 'proxy');
        } else {
          log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ', 'warning');
        }
      }
      
      // –°–æ–∑–¥–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
      const launchOptions = { 
        headless: true,
        slowMo: 100,
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-dev-shm-usage',
          '--disable-gpu',
          '--disable-web-security',
          '--disable-features=VizDisplayCompositor',
          '--no-first-run',
          '--disable-extensions',
          '--disable-background-timer-throttling',
          '--disable-backgrounding-occluded-windows',
          '--disable-renderer-backgrounding',
          '--disable-ipc-flooding-protection',
          '--disable-blink-features=AutomationControlled'
        ]
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
      if (currentProxy) {
        launchOptions.proxy = {
          server: `http://${currentProxy.host}:${currentProxy.port}`,
          username: currentProxy.username,
          password: currentProxy.password
        };
        log(`üîß –ù–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–æ–∫—Å–∏: http://${currentProxy.host}:${currentProxy.port}`, 'debug');
      }
      
      browser = await chromium.launch(launchOptions);
      
      // –†–∞–Ω–¥–æ–º–∏–∑–∏—Ä—É–µ–º User-Agent
      const userAgents = [
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36',
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36'
      ];
      const randomUA = userAgents[Math.floor(Math.random() * userAgents.length)];
      
      const context = await browser.newContext({
        userAgent: randomUA,
        viewport: { 
          width: 1920 + Math.floor(Math.random() * 100), 
          height: 1080 + Math.floor(Math.random() * 100) 
        },
        locale: 'ru-RU',
        timezoneId: 'Europe/Moscow',
        extraHTTPHeaders: {
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
          'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
          'Accept-Encoding': 'gzip, deflate, br',
          'Cache-Control': 'no-cache',
          'Pragma': 'no-cache',
          'Sec-Ch-Ua': '"Chromium";v="136", "Not_A Brand";v="24", "Google Chrome";v="136"',
          'Sec-Ch-Ua-Mobile': '?0',
          'Sec-Ch-Ua-Platform': '"Windows"',
          'Sec-Fetch-Dest': 'document',
          'Sec-Fetch-Mode': 'navigate',
          'Sec-Fetch-Site': 'none',
          'Sec-Fetch-User': '?1',
          'Upgrade-Insecure-Requests': '1',
          'DNT': '1'
        }
      });
      
      const page = await context.newPage();
      
      // –°–µ—Ç–µ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
      let requestCount = 0;
      let responseCount = 0;
      
      page.on('request', request => {
        requestCount++;
        if (request.url().includes('vseinstrumenti.ru')) {
          log(`üì§ [OUT-${requestCount}] ${request.method()} ${request.url().substring(0, 80)}...`, 'debug');
        }
      });
      
      page.on('response', response => {
        responseCount++;
        if (response.url().includes('vseinstrumenti.ru')) {
          log(`üì• [IN-${responseCount}] ${response.status()} ${response.url().substring(0, 80)}...`, 'debug');
        }
      });
      
      page.on('requestfailed', request => {
        log(`‚ùå [FAILED] ${request.url().substring(0, 80)}... - ${request.failure().errorText}`, 'error');
      });
      
      // –ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏—è
      await page.addInitScript(() => {
        Object.defineProperty(navigator, 'webdriver', { get: () => undefined, configurable: true });
        delete navigator.__proto__.webdriver;
        delete navigator.webdriver;
        delete window.navigator.webdriver;
        
        Object.defineProperty(navigator, 'platform', { get: () => 'Win32', configurable: true });
        Object.defineProperty(screen, 'width', { get: () => 1920, configurable: true });
        Object.defineProperty(screen, 'height', { get: () => 1080, configurable: true });
        Object.defineProperty(screen, 'availWidth', { get: () => 1920, configurable: true });
        Object.defineProperty(screen, 'availHeight', { get: () => 1040, configurable: true });
        Object.defineProperty(screen, 'colorDepth', { get: () => 24, configurable: true });
        Object.defineProperty(screen, 'pixelDepth', { get: () => 24, configurable: true });
        
        Object.defineProperty(navigator, 'language', { get: () => 'ru-RU', configurable: true });
        Object.defineProperty(navigator, 'languages', { get: () => ['ru-RU', 'ru', 'en-US', 'en'], configurable: true });
        
        delete window.document.$cdc_asdjflasutopfhvcZLmcfl_;
        delete window.$chrome_asyncScriptInfo;
        delete window.__$webdriverAsyncExecutor;
        delete window.__webdriver_script_fn;
        delete window.__selenium_unwrapped;
        delete window.__webdriver_unwrapped;
        
        Object.defineProperty(navigator, 'plugins', {
          get: () => [
            { 0: { type: "application/x-google-chrome-pdf", suffixes: "pdf", description: "Portable Document Format", filename: "internal-pdf-viewer" } },
            { 1: { type: "application/pdf", suffixes: "pdf", description: "Portable Document Format", filename: "mhjfbmdgcfjbbpaeojofohoefgiehjai" } }
          ]
        });
        
        if (window.chrome) {
          Object.defineProperty(window.chrome, 'runtime', {
            get: () => ({ onConnect: undefined, onMessage: undefined })
          });
        }
        
        const originalQuery = document.querySelector;
        document.querySelector = function(selector) {
          if (selector === '[webdriver]') return null;
          return originalQuery.call(document, selector);
        };
        
        if (document.documentElement) {
          document.documentElement.removeAttribute('webdriver');
        }
        
        const originalQuery2 = navigator.permissions.query;
        navigator.permissions.query = (parameters) => (
          parameters.name === 'notifications' ?
            Promise.resolve({ state: Notification.permission }) :
            originalQuery2(parameters)
        );
      });
      
      try {
        const productUrl = 'https://www.vseinstrumenti.ru/product/vibratsionnyj-nasos-sibrteh-svn300-15-kabel-15-m-99302-1338303/';
        
        // üè† [STAGE 1/3] –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê
        log('üè† [STAGE 1/3] –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...', 'info');
        
        const initialDelay = Math.floor(Math.random() * 3000) + 2000;
        log(`‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ ${initialDelay}ms –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º...`, 'debug');
        await new Promise(resolve => setTimeout(resolve, initialDelay));
        
        const homeResponse = await page.goto('https://www.vseinstrumenti.ru/', { 
          waitUntil: 'domcontentloaded',
          timeout: 30000
        });
        
        const homeStatus = homeResponse.status();
        log(`‚úÖ [STAGE 1/3] –ì–ª–∞–≤–Ω–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Å—Ç–∞—Ç—É—Å: ${homeStatus}`, 'info');
        
        if (homeStatus === 403) {
          log('üö´ HTTP 403 –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ', 'warning');
          
          // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É
          const needsProxy = proxyHandler.registerProtectionHit();
          log(`üîí –ó–∞—â–∏—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞. Total hits: ${proxyHandler.getProtectionHitCount()}, Should use proxy: ${needsProxy}`, 'proxy');
          
          if (currentProxy) {
            // –ü–æ–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏ –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω—ã–π
            proxyHandler.markProxyAsFailed(currentProxy, 'HTTP_403_HOME_PAGE');
            currentProxy = null;
            usedProxy = false;
          }
          
          shouldUseProxy = true;
          continue; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pageTitle = await page.title();
        log(`üìÑ Page title: "${pageTitle}"`, 'debug');
        
        const htmlContent = await page.content();
        log(`üìä HTML content length: ${htmlContent.length}`, 'debug');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞—â–∏—Ç–∞
        const hasCloudflare = htmlContent.includes('cloudflare') || htmlContent.includes('Cloudflare');
        const hasBlock = htmlContent.includes('–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω') || htmlContent.includes('–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω') || htmlContent.includes('blocked');
        const hasCaptcha = htmlContent.includes('captcha') || htmlContent.includes('Captcha');
        log(`üîç Security check: cloudflare=${hasCloudflare}, block=${hasBlock}, captcha=${hasCaptcha}`, 'debug');
        
        if (hasCloudflare || hasBlock || hasCaptcha) {
          log('üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –≤ HTML', 'warning');
          
          const needsProxy = proxyHandler.registerProtectionHit();
          log(`üîí –ó–∞—â–∏—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞. Should use proxy: ${needsProxy}`, 'proxy');
          
          if (currentProxy) {
            proxyHandler.markProxyAsFailed(currentProxy, 'PROTECTION_DETECTED');
            currentProxy = null;
            usedProxy = false;
          }
          
          shouldUseProxy = true;
          continue;
        }
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
        await new Promise(resolve => setTimeout(resolve, 1500));
        await page.mouse.move(500, 300);
        await new Promise(resolve => setTimeout(resolve, 800));
        
        // üèôÔ∏è [STAGE 2/3] –£–°–¢–ê–ù–û–í–ö–ê –ì–û–†–û–î–ê
        log('üèôÔ∏è [STAGE 2/3] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥...', 'info');
        
        const cityUrl = 'https://www.vseinstrumenti.ru/represent/change/?represent_id=1';
        const cityResponse = await page.goto(cityUrl, { 
          waitUntil: 'domcontentloaded',
          timeout: 30000 
        });
        
        const cityStatus = cityResponse.status();
        log(`‚úÖ [STAGE 2/3] –ì–æ—Ä–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${cityStatus}`, 'info');
        
        if (cityStatus === 403) {
          log('üö´ HTTP 403 –Ω–∞ —ç—Ç–∞–ø–µ –≥–æ—Ä–æ–¥–∞', 'warning');
          
          const needsProxy = proxyHandler.registerProtectionHit();
          
          if (currentProxy) {
            proxyHandler.markProxyAsFailed(currentProxy, 'HTTP_403_CITY_PAGE');
            currentProxy = null;
            usedProxy = false;
          }
          
          shouldUseProxy = true;
          continue;
        }
        
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // üõí [STAGE 3/3] –ü–ï–†–ï–•–û–î –ù–ê –¢–û–í–ê–†
        log('üõí [STAGE 3/3] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–æ–≤–∞—Ä...', 'info');
        
        const productResponse = await page.goto(productUrl, { 
          waitUntil: 'domcontentloaded',
          timeout: 30000 
        });
        
        const productStatus = productResponse.status();
        log(`‚úÖ [STAGE 3/3] –¢–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${productStatus}`, 'info');
        
        if (productStatus === 403) {
          log('üö´ HTTP 403 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞', 'warning');
          
          const needsProxy = proxyHandler.registerProtectionHit();
          
          if (currentProxy) {
            proxyHandler.markProxyAsFailed(currentProxy, 'HTTP_403_PRODUCT_PAGE');
            currentProxy = null;
            usedProxy = false;
          }
          
          shouldUseProxy = true;
          continue;
        }
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // üîç [EXTRACTION] –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –î–ê–ù–ù–´–•
        log('üîç [EXTRACTION] –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞...', 'info');
        
        const productData = await page.evaluate(() => {
          const data = {};
          
          // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
          const titleElement = document.querySelector('h1[data-qa="get-product-title"]') ||
                              document.querySelector('h1.product__title') ||
                              document.querySelector('h1');
          
          if (titleElement) {
            data.name = titleElement.textContent.trim();
          }
          
          // –¶–µ–Ω–∞
          const priceElement = document.querySelector('[data-qa="price-now"]') ||
                              document.querySelector('[data-behavior="price-now"]') ||
                              document.querySelector('.N2sK2A [data-qa="price-now"]');
          
          if (priceElement) {
            const priceText = priceElement.textContent.replace(/\u00A0/g, ' ').replace(/\s+/g, ' ').trim();
            const priceMatch = priceText.match(/\d[\d\s\u00A0]*\d|\d+/);
            if (priceMatch) {
              const cleanedPrice = priceMatch[0].replace(/[\s\u00A0]+/g, '').replace(',', '.');
              const price = parseFloat(cleanedPrice);
              if (!isNaN(price) && price > 0) {
                data.price = price;
              }
            }
          }
          
          // –ù–∞–ª–∏—á–∏–µ
          const addToCartBtn = document.querySelector('[data-qa="product-add-to-cart-button"]') ||
                              document.querySelector('button[title="–í –∫–æ—Ä–∑–∏–Ω—É"]') ||
                              document.querySelector('.add-to-cart');
          
          const totalButtons = document.querySelectorAll('button').length;
          data.totalButtons = totalButtons;
          data.hasAddToCartBtn = !!addToCartBtn;
          
          if (addToCartBtn && !addToCartBtn.disabled && !addToCartBtn.classList.contains('disabled')) {
            data.availability = 'in_stock';
            
            // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
            const availabilityEl = document.querySelector('[data-qa="availability-info"]');
            if (availabilityEl) {
              const quantityText = availabilityEl.textContent;
              const exactMatch = quantityText.match(/(\d+)\s*—à—Ç/);
              if (exactMatch) {
                data.quantity = parseInt(exactMatch[1]);
              } else {
                const moreMatch = quantityText.match(/[>–±–æ–ª—å—à–µ|–±–æ–ª–µ–µ]\s*(\d+)\s*—à—Ç/i);
                if (moreMatch) {
                  data.quantity = parseInt(moreMatch[1]);
                } else {
                  data.quantity = 1;
                }
              }
            } else {
              data.quantity = 1;
            }
          } else {
            data.availability = 'out_of_stock';
            data.quantity = 0;
          }
          
          return data;
        });
        
        log(`üìä [EXTRACTION] –î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã:`, 'success');
        log(`   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${productData.name || '–ù–ï –ù–ê–ô–î–ï–ù–û'}`, 'info');
        log(`   ‚Ä¢ –¶–µ–Ω–∞: ${productData.price || '–ù–ï –ù–ê–ô–î–ï–ù–ê'} —Ä—É–±.`, 'info');
        log(`   ‚Ä¢ –ù–∞–ª–∏—á–∏–µ: ${productData.availability || '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–û'}`, 'info');
        log(`   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${productData.quantity || 0} —à—Ç.`, 'info');
        log(`   ‚Ä¢ –ö–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${productData.totalButtons || 0}`, 'debug');
        log(`   ‚Ä¢ –ö–Ω–æ–ø–∫–∞ "–í –∫–æ—Ä–∑–∏–Ω—É": ${productData.hasAddToCartBtn ? '–ù–ê–ô–î–ï–ù–ê' : '–ù–ï –ù–ê–ô–î–ï–ù–ê'}`, 'debug');
        
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã
        if (productData.name && productData.name.length > 10) {
          success = true;
          
          // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å–ø–µ—Ö
          if (usedProxy) {
            proxyHandler.registerSuccess(true, currentProxy);
            log(`‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å –ø—Ä–æ–∫—Å–∏ ${currentProxy.host}:${currentProxy.port}`, 'proxy');
          } else {
            proxyHandler.registerSuccess(false);
            log(`‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–æ–∫—Å–∏`, 'success');
          }
          
          break; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–ø—ã—Ç–æ–∫
        } else {
          log('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω—ã–µ', 'warning');
          
          if (currentProxy) {
            proxyHandler.markProxyAsFailed(currentProxy, 'NO_DATA_EXTRACTED');
            currentProxy = null;
            usedProxy = false;
          }
          
          shouldUseProxy = true;
        }
        
      } catch (error) {
        log(`‚ùå [ATTEMPT ${attempt}] –û—à–∏–±–∫–∞: ${error.message}`, 'error');
        
        if (currentProxy) {
          proxyHandler.markProxyAsFailed(currentProxy, `ERROR_${error.message.substring(0, 50)}`);
          currentProxy = null;
          usedProxy = false;
        }
        
        shouldUseProxy = true;
      }
    }
    
    if (!success) {
      log('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –ü–∞—Ä—Å–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è.', 'error');
    }
    
    // –ü–µ—á–∞—Ç–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (proxyHandler) {
      proxyHandler.printStats();
    }
    
  } catch (error) {
    log(`üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`, 'error');
    console.error(error.stack);
  } finally {
    if (browser) {
      await browser.close();
      log('üîß –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç', 'info');
    }
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä
parseProductAvailability(); 