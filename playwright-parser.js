import { chromium } from 'playwright';

console.log('üõí –≠–§–§–ï–ö–¢–ò–í–ù–´–ô –ü–ê–†–°–ï–† –ù–ê–õ–ò–ß–ò–Ø: Playwright –≤–µ—Ä—Å–∏—è\n');

const parseProductAvailability = async () => {
  const browser = await chromium.launch({ 
    headless: true,
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      '--disable-gpu'
    ]
  });
  
  const context = await browser.newContext({
    // üîß [USER-AGENT] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π User-Agent
    userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36',
    
    // üñ•Ô∏è [VIEWPORT] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π viewport
    viewport: { width: 1920, height: 1080 },
    
    // üìã [HEADERS] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    extraHTTPHeaders: {
      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
      'Accept-Encoding': 'gzip, deflate, br',
      'Cache-Control': 'no-cache',
      'Pragma': 'no-cache',
      'Sec-Ch-Ua': '"Chromium";v="136", "Not_A Brand";v="24", "Google Chrome";v="136"',
      'Sec-Ch-Ua-Mobile': '?0',
      'Sec-Ch-Ua-Platform': '"Windows"',
      'Sec-Fetch-Dest': 'document',
      'Sec-Fetch-Mode': 'navigate',
      'Sec-Fetch-Site': 'none',
      'Sec-Fetch-User': '?1',
      'Upgrade-Insecure-Requests': '1',
      'DNT': '1'
    }
  });
  
  const page = await context.newPage();
  
  // üé≠ [–ê–ù–¢–ò-–î–ï–¢–ï–ö–¶–ò–Ø] –ü–û–õ–ù–ê–Ø –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –ê–ù–¢–ò-–î–ï–¢–ï–ö–¶–ò–Ø
  await page.addInitScript(() => {
    Object.defineProperty(navigator, 'platform', { get: () => 'Win32', configurable: true });
    Object.defineProperty(screen, 'width', { get: () => 1920, configurable: true });
    Object.defineProperty(screen, 'height', { get: () => 1080, configurable: true });
    Object.defineProperty(screen, 'availWidth', { get: () => 1920, configurable: true });
    Object.defineProperty(screen, 'availHeight', { get: () => 1040, configurable: true });
    Object.defineProperty(screen, 'colorDepth', { get: () => 24, configurable: true });
    Object.defineProperty(screen, 'pixelDepth', { get: () => 24, configurable: true });
    
    Object.defineProperty(navigator, 'webdriver', { get: () => false, configurable: true });
    delete navigator.__proto__.webdriver;
    
    Object.defineProperty(navigator, 'language', { get: () => 'ru-RU', configurable: true });
    Object.defineProperty(navigator, 'languages', { get: () => ['ru-RU', 'ru', 'en-US', 'en'], configurable: true });
    
    window.navigator.webdriver = false;
    delete window.navigator.webdriver;
    
    if (document.documentElement) {
      document.documentElement.removeAttribute('webdriver');
    }
  });
  
  const productUrl = 'https://www.vseinstrumenti.ru/product/vibratsionnyj-nasos-sibrteh-svn300-15-kabel-15-m-99302-1338303/';
  
  // üè† [STAGE 1/3] –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê
  console.log('üè† [STAGE 1/3] –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
  
  const initialDelay = Math.floor(Math.random() * 1000) + 500;
  await new Promise(resolve => setTimeout(resolve, initialDelay));
  
  try {
    const homeResponse = await page.goto('https://www.vseinstrumenti.ru/', { 
      waitUntil: 'domcontentloaded',
      timeout: 5000
    });
    
    const homeStatus = homeResponse.status();
    console.log(`‚úÖ [STAGE 1/3] –ì–ª–∞–≤–Ω–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Å—Ç–∞—Ç—É—Å: ${homeStatus}`);
    
    if (homeStatus === 403) {
      console.log('üîÑ [STAGE 1/3] HTTP 403 - –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–µ–≤ –ø—Ä–æ–∫—Å–∏...');
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      try {
        const homeRetryResponse = await page.goto('https://www.vseinstrumenti.ru/', { 
          waitUntil: 'domcontentloaded',
          timeout: 5000
        });
        
        console.log(`‚úÖ [STAGE 1/3] –ü—Ä–æ–≥—Ä–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${homeRetryResponse.status()}`);
      } catch (retryError) {
        console.log(`‚ö†Ô∏è [STAGE 1/3] –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: ${retryError.message}`);
        console.log('üîÑ [STAGE 1/3] –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É...');
      }
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è [STAGE 1/3] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π: ${error.message}`);
  }
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–ª–∞–≤–Ω–æ–π
  await new Promise(resolve => setTimeout(resolve, 1500));
  await page.mouse.move(500, 300);
  await new Promise(resolve => setTimeout(resolve, 800));
  
  // üèôÔ∏è [STAGE 2/3] –£–°–¢–ê–ù–û–í–ö–ê –ì–û–†–û–î–ê
  console.log('üèôÔ∏è [STAGE 2/3] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥...');
  
  let citySuccess = false;
  try {
    const cityUrl = 'https://www.vseinstrumenti.ru/represent/change/?represent_id=1';
    const cityResponse = await page.goto(cityUrl, { 
      waitUntil: 'domcontentloaded',
      timeout: 5000
    });
    
    console.log(`‚úÖ [STAGE 2/3] –ì–æ—Ä–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${cityResponse.status()}`);
    citySuccess = true;
  } catch (cityError) {
    console.log(`‚ö†Ô∏è [STAGE 2/3] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–∞: ${cityError.message}`);
    console.log('üîÑ [STAGE 2/3] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≥–æ—Ä–æ–¥–∞ –∏ –∏–¥–µ–º –∫ —Ç–æ–≤–∞—Ä—É...');
  }
  
  if (citySuccess) {
    await new Promise(resolve => setTimeout(resolve, 1000));
  }
  
  // üõí [STAGE 3/3] –ü–ï–†–ï–•–û–î –ù–ê –¢–û–í–ê–†
  console.log('üõí [STAGE 3/3] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–æ–≤–∞—Ä—É...');
  
  let productSuccess = false;
  try {
    const productResponse = await page.goto(productUrl, { 
      waitUntil: 'domcontentloaded',
      timeout: 5000
    });
    
    console.log(`‚úÖ [STAGE 3/3] –¢–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${productResponse.status()}`);
    productSuccess = true;
  } catch (productError) {
    console.log(`‚ö†Ô∏è [STAGE 3/3] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞: ${productError.message}`);
    
    // –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –ü–£–¢–¨: –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–æ–≤–∞—Ä—É
    console.log('üéØ [FALLBACK] –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–æ–≤–∞—Ä—É –±–µ–∑ –ø—Ä–æ–≥—Ä–µ–≤–∞...');
    
    try {
      const directResponse = await page.goto(productUrl, { 
        waitUntil: 'networkidle',
        timeout: 5000
      });
      
      console.log(`‚úÖ [FALLBACK] –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${directResponse.status()}`);
      productSuccess = true;
    } catch (directError) {
      console.log(`‚ùå [FALLBACK] –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${directError.message}`);
      console.log('üîÑ [FALLBACK] –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    }
  }
  
  // –ü–ê–†–°–ò–ù–ì –ù–ê–õ–ò–ß–ò–Ø
  console.log('\nüîç –ü–ê–†–°–ò–ù–ì –ù–ê–õ–ò–ß–ò–Ø...\n');
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  const availabilityData = await page.evaluate(() => {
    const data = {};
    
    // 1. –ò–©–ï–ú –ö–ù–û–ü–ö–£ "–í –ö–û–†–ó–ò–ù–£"
    let addToCartBtn = document.querySelector('[data-qa="product-add-to-cart-button"]') ||
                       document.querySelector('button[title="–í –∫–æ—Ä–∑–∏–Ω—É"]') ||
                       document.querySelector('.add-to-cart') ||
                       document.querySelector('.OnnEZB button') ||
                       document.querySelector('[class*="add-to-cart"]') ||
                       document.querySelector('[class*="buy-button"]') ||
                       document.querySelector('button[data-qa*="add-to-cart"]') ||
                       document.querySelector('button[data-qa*="buy"]');
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏
    if (!addToCartBtn) {
      const allButtons = document.querySelectorAll('button');
      for (const btn of allButtons) {
        const btnText = btn.textContent.toLowerCase().trim();
        if (btnText.includes('–≤ –∫–æ—Ä–∑–∏–Ω—É') || 
            btnText.includes('–∫—É–ø–∏—Ç—å') || 
            btnText.includes('–∑–∞–∫–∞–∑–∞—Ç—å') ||
            btnText.includes('–¥–æ–±–∞–≤–∏—Ç—å')) {
          addToCartBtn = btn;
          break;
        }
      }
    }
    
    data.addToCartBtnFound = !!addToCartBtn;
    
    if (addToCartBtn) {
      data.btnDisabled = addToCartBtn.disabled;
      data.btnHasDisabledClass = addToCartBtn.classList.contains('disabled');
      data.btnText = addToCartBtn.textContent.trim();
      
      if (!addToCartBtn.disabled && !addToCartBtn.classList.contains('disabled')) {
        data.availability = 'in_stock';
        
        // 2. –ò–©–ï–ú –¢–û–ß–ù–û–ï –ö–û–õ–ò–ß–ï–°–¢–í–û
        const availabilityEl = document.querySelector('[data-qa="availability-info"]');
        if (availabilityEl) {
          const quantityText = availabilityEl.textContent;
          data.availabilityText = quantityText;
          
          // –¢–æ—á–Ω–æ–µ —á–∏—Å–ª–æ: "351 —à—Ç"
          let exactMatch = quantityText.match(/(\d+)\s*—à—Ç/);
          if (exactMatch) {
            data.quantity = parseInt(exactMatch[1]);
          } else {
            // –ë–æ–ª—å—à–µ —á–∏—Å–ª–∞: "> 100 —à—Ç", "–±–æ–ª–µ–µ 100 —à—Ç"
            let moreMatch = quantityText.match(/[>–±–æ–ª—å—à–µ|–±–æ–ª–µ–µ]\s*(\d+)\s*—à—Ç/i);
            if (moreMatch) {
              data.quantity = parseInt(moreMatch[1]);
            } else {
              data.quantity = 1; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            }
          }
        } else {
          data.quantity = 1; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
        
        // 3. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–û–°–¢–ê–í–ö–ï
        const deliveryInfos = [];
        
        // –°–∞–º–æ–≤—ã–≤–æ–∑
        const pickupElement = document.querySelector('[data-qa="product-availability"]');
        if (pickupElement) {
          const pickupText = pickupElement.innerText.trim();
          const pickupMatch = pickupText.match(/–°–∞–º–æ–≤—ã–≤–æ–∑:(.+)/);
          if (pickupMatch) {
            deliveryInfos.push(`–°–∞–º–æ–≤—ã–≤–æ–∑: ${pickupMatch[1].trim()}`);
          }
        }
        
        // –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
        const deliveryLinkElement = document.querySelector('[data-qa="courier-delivery-modal"]');
        if (deliveryLinkElement) {
          let deliveryText = deliveryLinkElement.parentElement.innerText.trim();
          deliveryText = deliveryText.replace(/^–ö—É—Ä—å–µ—Ä–æ–º:\s*/, '');
          deliveryInfos.push(`–ö—É—Ä—å–µ—Ä–æ–º: ${deliveryText}`);
        }
        
        data.deliveryInfo = deliveryInfos;
        
      } else {
        data.availability = 'out_of_stock';
        data.quantity = 0;
      }
    } else {
      data.availability = 'unknown';
      data.quantity = 0;
    }
    
    return data;
  });
  
  // –†–ï–ó–£–õ–¨–¢–ê–¢–´
  console.log('üì¶ === –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–ê–†–°–ò–ù–ì–ê –ù–ê–õ–ò–ß–ò–Ø ===');
  console.log(`üéØ –°–¢–ê–¢–£–°: ${availabilityData.availability}`);
  console.log(`üìä –ö–û–õ–ò–ß–ï–°–¢–í–û: ${availabilityData.quantity} —à—Ç`);
  
  if (availabilityData.availabilityText) {
    console.log(`üí¨ –¢–ï–ö–°–¢ –ù–ê–õ–ò–ß–ò–Ø: "${availabilityData.availabilityText}"`);
  }
  
  if (availabilityData.deliveryInfo && availabilityData.deliveryInfo.length > 0) {
    console.log('üöö –î–û–°–¢–ê–í–ö–ê:');
    availabilityData.deliveryInfo.forEach(info => console.log(`   ${info}`));
  }
  
  console.log('\nüîß –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:');
  console.log(`   –ö–Ω–æ–ø–∫–∞ "–í –∫–æ—Ä–∑–∏–Ω—É" –Ω–∞–π–¥–µ–Ω–∞: ${availabilityData.addToCartBtnFound ? '‚úÖ' : '‚ùå'}`);
  if (availabilityData.addToCartBtnFound) {
    console.log(`   –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞: ${availabilityData.btnDisabled ? '‚ùå' : '‚úÖ'}`);
    console.log(`   –ï—Å—Ç—å –∫–ª–∞—Å—Å disabled: ${availabilityData.btnHasDisabledClass ? '‚ùå' : '‚úÖ'}`);
    console.log(`   –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: "${availabilityData.btnText}"`);
  }
  
  console.log('=======================================\n');
  
  await browser.close();
};

await parseProductAvailability();

console.log('üèÅ –ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞–ª–∏—á–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!'); 